stages:
- build
- deploy
- release
#- notify

variables:
  MAVEN_CLI_OPTS: "-T 2C -s settings.xml"
  MAVEN_OPTS : "-Dsettings.security=settings-security.xml"
  MM_MSG_USER: "GitLab Tech User"
  GIT_REPO_URL: https://${TECHUSER_NAME}:${TECHUSER_PWD}@gitlab.kazan.priv.atos.fr/acs-delivery-ge/acs-delivery-ge-gitlab-1.git
  MM_MSG_ICON: "https://gitlab.kazan.priv.atos.fr/uploads/-/system/user/avatar/13412/avatar.png"
  MM_MSG_TEXT: "###  **New release ` $MAVEN_RELEASE ` available on Nexus for *$CI_PROJECT_NAME* project [ branch `$CI_COMMIT_REF_NAME` ].**\n_The new snapshot version : `$MAVEN_SNAPSHOT`. :triumph:_\nHappy coding @channel"
  # MM_MSG_WEBHOOK: "https://mattermost.kazan.priv.atos.fr/hooks/1645okpkr3gdpgghshmb799cxw"


build:
  image: registry-testing.kazan.atosworldline.com/kazan/awl-kazan-builder:openjdk8-latest
  stage: build
  before_script:
  - cat "$SETTINGS" > "$(pwd)/settings.xml"
  - cat "$SETTINGS_SECURITY" > "$(pwd)/settings-security.xml"
  script:
  - mvn -f pom.xml clean package -U -Dmaven.test.skip=true -Dmaven.javadoc.skip=true $MAVEN_CLI_OPTS
  when: always
  tags:
    - kazan-S
    - docker-S

snapshot_deploy:
  image: registry-testing.kazan.atosworldline.com/kazan/awl-kazan-builder:openjdk8-latest
  stage: deploy
  before_script:
    - mvn help:evaluate -Dexpression=project.version -q -DforceStdout > version.tmp
    - sed -i 's/-SNAPSHOT//g' version.tmp
    - export SNAPSHOT="`cat version.tmp`"
    - rm version.tmp
    - echo "build version $SNAPSHOT-SNAPSHOT"
    - mvn versions:set -DnewVersion=$SNAPSHOT-SNAPSHOT versions:commit
    - cat "$SETTINGS" > "$(pwd)/settings.xml"
    - cat "$SETTINGS_SECURITY" > "$(pwd)/settings-security.xml"
  script:
    - mvn -f pom.xml clean deploy -U -Dmaven.test.skip=true -Dmaven.javadoc.skip=true $MAVEN_CLI_OPTS
  when: manual
  tags:
    - kazan-S
    - docker-S
  only:
    - /^snapshots/.+$/
    - /^issue/.+$/
    - /^feature/.+$/
    - /^request/.+$/
    - specific_artifacts
    - master
    - /^[HU][0-9X][BFGMAH]$/
  
make_release: 
  image: registry-testing.kazan.atosworldline.com/kazan/awl-kazan-builder:openjdk8-latest
  stage: release
  before_script:
    - export MAVEN_CURRENT_VERSION=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout`
    - export MAVEN_RELEASE_VERSION=`echo $MAVEN_CURRENT_VERSION | sed 's/-SNAPSHOT//g'`
    - echo "build version $MAVEN_RELEASE_VERSION"
    - export MAVEN_SNAPSHOT_VERSION=`echo $MAVEN_RELEASE_VERSION | sed -r 's/^([0-9]+\.)?([0-9]+)(-SNAPSHOT)?/echo "\1$((\2+1))-SNAPSHOT"/ge'`
    - cat "$SETTINGS" > "$(pwd)/settings.xml"
    - cat "$SETTINGS_SECURITY" > "$(pwd)/settings-security.xml"
  script:

    - mvn versions:set -DnewVersion=$MAVEN_RELEASE_VERSION versions:commit
    - git commit -a -m "Release $MAVEN_RELEASE_VERSION"
    - git tag -f -a $MAVEN_RELEASE_VERSION -m "$MAVEN_RELEASE_VERSION"
    - echo "## Snapshot $MAVEN_SNAPSHOT_VERSION on $CI_COMMIT_REF_NAME branch"
    - mvn versions:set -DnewVersion=$MAVEN_SNAPSHOT_VERSION versions:commit
    - git commit -a -m "Snapshot $MAVEN_SNAPSHOT_VERSION"
    - git push origin $CI_COMMIT_REF_NAME
    - git push --tags
  script:
    - mvn versions:set -DnewVersion=$MAVEN_RELEASE_VERSION versions:commit 
    - mvn -f pom.xml clean package -U -Dmaven.test.skip=true -Dmaven.javadoc.skip=true $MAVEN_CLI_OPTS
    - git config user.name "$TECHUSER_NAME"
    - git config user.email "$TECHUSER_MAIL"
    - git config user.password "$TECHUSER_PWD"
    - git add .
    - git commit -m "Release $MAVEN_RELEASE_VERSION"
    - git tag -a $MAVEN_RELEASE_VERSION -m "Release $MAVEN_RELEASE_VERSION"
    - git push --tags $GIT_REPO_URL HEAD:$CI_COMMIT_REF_NAME
  after_script:
    - echo "new version $MAVEN_SNAPSHOT_VERSION"
    - mvn versions:set -DnewVersion=$MAVEN_SNAPSHOT_VERSION versions:commit $MAVEN_CLI_OPTS
    - git add .
    - git commit -m "Next Snapshot $MAVEN_SNAPSHOT_VERSION"
    - git push $GIT_REPO_URL HEAD:$CI_COMMIT_REF_NAME

  when: manual
  only:
  - master
  tags:
    - kazan-S
    - docker-S



release_deploy:
  image: registry-testing.kazan.atosworldline.com/kazan/awl-kazan-builder:openjdk8-latest
  stage: release
  before_script:
    - cat "$SETTINGS" > "$(pwd)/settings.xml"
    - cat "$SETTINGS_SECURITY" > "$(pwd)/settings-security.xml"
  script:
    - mvn -f pom.xml clean deploy -U -Dmaven.test.skip=true -Dmaven.javadoc.skip=true $MAVEN_CLI_OPTS
  only: 
  - tags
  tags:
    - kazan-S
    - docker-S



#notify: 
#  image: registry-testing.kazan.atosworldline.com/kazan/awl-kazan-builder:jdk8-latest
#  stage: notify
#  script:
#  - VERSION="$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)"
#  - >-
#      curl -X POST
#      -H 'Content-Type: application/json'
#      -H 'cache-control: no-cache'
#      -d "{ \"text\": \":gitlabrunner: Pipeline done for job : ** $CI_JOB_ID from branch $CI_COMMIT_REF_NAME :**\n$CI_COMMIT_MESSAGE \nhash was $CI_COMMIT_SHA\" }"
#      $MM_MSG_WEBHOOK
#
#  when: always
#  only:
#    - master
#    - tags
#  tags:
#    - kazan-S
#    - docker-S
